import { useState, useEffect, useContext } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { AuthContext } from '../context/index'
import PriceCard from '../components/Cards/PriceCard'
import GuestLayout from '../layouts/GuestLayout'
import axios from 'axios'
import styles from '../styles/Home.module.css'
import { Center, Heading, VStack, Box, HStack, Spacer } from '@chakra-ui/react'
import { Calendar } from '@hassanmojab/react-modern-calendar-datepicker'
import '@hassanmojab/react-modern-calendar-datepicker/lib/DatePicker.css'
import { Divider } from '@chakra-ui/react'
import type { DayValue } from '@hassanmojab/react-modern-calendar-datepicker'
import type { NextPageWithLayout } from './_app'
import type { Stripe } from 'stripe'
import type { AuthContextType } from '../context/index'
import type { StripeSubscription } from '../types/stripe/subscription'

const Home: NextPageWithLayout = () => {
  const router = useRouter()
  const [state, setState] = useContext<AuthContextType>(AuthContext)
  const [prices, setPrices] = useState([])
  const [userSubscriptions, setUserSubscriptions] = useState<string[]>([])
  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false)
  const [isSubscribed, setIsSubscribed] = useState<boolean>(false)
  // console.log('router info', router)
  // console.log('This use is', state.user.loggedInUser)

  const fetchPrices = async () => {
    const { data } = await axios.get('/api/subscriptions/prices')
    // console.log('Getting Prices', data)
    setPrices(data)
  }

  const handleClick = async (
    e: React.MouseEvent<HTMLElement, MouseEvent>,
    price: Stripe.Price
  ) => {
    e.preventDefault()
    if (userSubscriptions && userSubscriptions.includes(price.id)) {
      router.push(`/${price.nickname?.toLowerCase()}`)
      return
    }
    // console.log('Plan was clicked. price_id is', price.id)
    if (state.user.loggedInUser) {
      console.log(state.user.stripe_customer_id)
      const { data } = await axios.post('api/checkout/create', {
        priceId: price.id,
        stripe_customer_id: state.user.stripe_customer_id,
      })
      // console.log('Subscription was created', data)
      window.open(data, '_self')
    } else {
      router.push('/register')
    }
  }

  const getSubscriptions = async () => {
    const { data } = await axios.get('/api/subscriptions/list', {
      params: {
        stripe_customer_id: state.user.stripe_customer_id,
      },
    })
    //   console.log("Subs =>", data);
    setUserSubscriptions(data.data.subscriptions)
    setState({
      ...state,
      user: {
        ...state.user,
        loggedInUser: null,
        stripe_customer_id: null,
        subscriptions: userSubscriptions,
      },
    })
    console.log(state)
  }

  useEffect(() => {
    getSubscriptions()
    console.log(userSubscriptions)
  }, [state.user.subscriptions])

  useEffect(() => {
    console.log(state)
    if (state.user.loggedInUser) {
      setIsLoggedIn(true)
      if (userSubscriptions.length != 0) {
        router.push('/')
      } else {
        fetchPrices()
      }
    } else {
      fetchPrices()
    }
  }, [state.user.loggedInUser])

  return (
    <div className={styles.container}>
      <Head>
        <title>Diary</title>
        <meta name='description' content='Generated by create next app' />
      </Head>

      <div className='col-start-3 col-end-4 w-100'>
        <VStack>
          <Heading as='h1' fontSize='30px'>
            Diary
          </Heading>

          <div>
            <Heading as='h2' fontSize='20px'>
              This is for Guest User
            </Heading>
            <Center>
              <Box overflowY='auto' maxWidth='800px' maxHeight='500px'>
                Chose your Plan
                <HStack>
                  {prices &&
                    prices.map((price: Stripe.Price) => (
                      <PriceCard
                        key={price.id}
                        price={price}
                        handleSubscription={handleClick}
                        userSubscriptions={userSubscriptions}
                      />
                    ))}
                </HStack>
              </Box>
            </Center>
          </div>
        </VStack>
      </div>
    </div>
  )
}

export default Home

Home.layout = (page) => <GuestLayout>{page}</GuestLayout>
